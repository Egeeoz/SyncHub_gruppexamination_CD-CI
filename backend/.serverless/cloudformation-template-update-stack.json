{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "UserSignUpLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/syncHub-dev-userSignUp"
      }
    },
    "UserLoginLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/syncHub-dev-userLogin"
      }
    },
    "CreateMeetupLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/syncHub-dev-createMeetup"
      }
    },
    "GetAllMeetupsLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/syncHub-dev-getAllMeetups"
      }
    },
    "UpdateMeetupLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/syncHub-dev-updateMeetup"
      }
    },
    "DeleteMeetupLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/syncHub-dev-deleteMeetup"
      }
    },
    "UserSignUpLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-4da07052-7650",
          "S3Key": "serverless/syncHub/dev/1730107825558-2024-10-28T09:30:25.558Z/userSignUp.zip"
        },
        "Handler": "backend/functions/userSignup/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "syncHub-dev-userSignUp",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": "arn:aws:iam::586794471369:role/serverless"
      },
      "DependsOn": [
        "UserSignUpLogGroup"
      ]
    },
    "UserLoginLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-4da07052-7650",
          "S3Key": "serverless/syncHub/dev/1730107825558-2024-10-28T09:30:25.558Z/userLogin.zip"
        },
        "Handler": "backend/functions/userLogin/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "syncHub-dev-userLogin",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": "arn:aws:iam::586794471369:role/serverless"
      },
      "DependsOn": [
        "UserLoginLogGroup"
      ]
    },
    "CreateMeetupLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-4da07052-7650",
          "S3Key": "serverless/syncHub/dev/1730107825558-2024-10-28T09:30:25.558Z/createMeetup.zip"
        },
        "Handler": "backend/functions/createMeetup/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "syncHub-dev-createMeetup",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": "arn:aws:iam::586794471369:role/serverless"
      },
      "DependsOn": [
        "CreateMeetupLogGroup"
      ]
    },
    "GetAllMeetupsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-4da07052-7650",
          "S3Key": "serverless/syncHub/dev/1730107825558-2024-10-28T09:30:25.558Z/getAllMeetups.zip"
        },
        "Handler": "backend/functions/getAllMeetups/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "syncHub-dev-getAllMeetups",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": "arn:aws:iam::586794471369:role/serverless"
      },
      "DependsOn": [
        "GetAllMeetupsLogGroup"
      ]
    },
    "UpdateMeetupLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-4da07052-7650",
          "S3Key": "serverless/syncHub/dev/1730107825558-2024-10-28T09:30:25.558Z/updateMeetup.zip"
        },
        "Handler": "backend/functions/updateMeetup/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "syncHub-dev-updateMeetup",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": "arn:aws:iam::586794471369:role/serverless"
      },
      "DependsOn": [
        "UpdateMeetupLogGroup"
      ]
    },
    "DeleteMeetupLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "serverless-framework-deployments-eu-north-1-4da07052-7650",
          "S3Key": "serverless/syncHub/dev/1730107825558-2024-10-28T09:30:25.558Z/deleteMeetup.zip"
        },
        "Handler": "backend/functions/deleteMeetup/index.handler",
        "Runtime": "nodejs20.x",
        "FunctionName": "syncHub-dev-deleteMeetup",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": "arn:aws:iam::586794471369:role/serverless"
      },
      "DependsOn": [
        "DeleteMeetupLogGroup"
      ]
    },
    "UserSignUpLambdaVersionHriLddjAI2UdeZ9hfd5ceOLQzWqeVYyclJeWE29OPY": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UserSignUpLambdaFunction"
        },
        "CodeSha256": "djVHIfSBq55dePegXdLI5s9Lfrk1f6Oiau7R+aQ4PKs="
      }
    },
    "UserLoginLambdaVersionamX0OtGjffqkaDsNii0bCKygJN21QiFZNV5S6PQk0jE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UserLoginLambdaFunction"
        },
        "CodeSha256": "djVHIfSBq55dePegXdLI5s9Lfrk1f6Oiau7R+aQ4PKs="
      }
    },
    "CreateMeetupLambdaVersionro5JjAUFX1kuOaOSDSAyCmJqBg31RDXqly4HyhQCIG0": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateMeetupLambdaFunction"
        },
        "CodeSha256": "djVHIfSBq55dePegXdLI5s9Lfrk1f6Oiau7R+aQ4PKs="
      }
    },
    "DeleteMeetupLambdaVersion2cUuovpJn5zEpC7AzdwIbb9044NHgDl1uzNnoNUls": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DeleteMeetupLambdaFunction"
        },
        "CodeSha256": "djVHIfSBq55dePegXdLI5s9Lfrk1f6Oiau7R+aQ4PKs="
      }
    },
    "UpdateMeetupLambdaVersionxtWNiXpN8830yOfRKLb4l64ZDkZ7eveiDGCXJNzdrBE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "UpdateMeetupLambdaFunction"
        },
        "CodeSha256": "djVHIfSBq55dePegXdLI5s9Lfrk1f6Oiau7R+aQ4PKs="
      }
    },
    "GetAllMeetupsLambdaVersionCJnuRfmIo3RmsgMk6vzYDO6nwAl9CDfSqCQRDDBw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GetAllMeetupsLambdaFunction"
        },
        "CodeSha256": "djVHIfSBq55dePegXdLI5s9Lfrk1f6Oiau7R+aQ4PKs="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-syncHub",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "UserSignUpLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UserSignUpLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUserSignUp": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UserSignUpLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostSignup": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /signup",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUserSignUp"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationUserSignUp"
    },
    "UserLoginLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UserLoginLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUserLogin": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UserLoginLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostLogin": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /login",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUserLogin"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationUserLogin"
    },
    "CreateMeetupLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CreateMeetupLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationCreateMeetup": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "CreateMeetupLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostMeetups": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /meetups",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationCreateMeetup"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationCreateMeetup"
    },
    "GetAllMeetupsLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GetAllMeetupsLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGetAllMeetups": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GetAllMeetupsLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetMeetups": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /meetups",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGetAllMeetups"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGetAllMeetups"
    },
    "UpdateMeetupLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "UpdateMeetupLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationUpdateMeetup": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "UpdateMeetupLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePutMeetups": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "PUT /meetups",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationUpdateMeetup"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationUpdateMeetup"
    },
    "DeleteMeetupLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DeleteMeetupLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationDeleteMeetup": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "DeleteMeetupLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteDeleteMeetups": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "DELETE /meetups",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationDeleteMeetup"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationDeleteMeetup"
    },
    "notesTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "synchub",
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": "serverless-framework-deployments-eu-north-1-4da07052-7650",
      "Export": {
        "Name": "sls-syncHub-dev-ServerlessDeploymentBucketName"
      }
    },
    "UserSignUpLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UserSignUpLambdaVersionHriLddjAI2UdeZ9hfd5ceOLQzWqeVYyclJeWE29OPY"
      },
      "Export": {
        "Name": "sls-syncHub-dev-UserSignUpLambdaFunctionQualifiedArn"
      }
    },
    "UserLoginLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UserLoginLambdaVersionamX0OtGjffqkaDsNii0bCKygJN21QiFZNV5S6PQk0jE"
      },
      "Export": {
        "Name": "sls-syncHub-dev-UserLoginLambdaFunctionQualifiedArn"
      }
    },
    "CreateMeetupLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CreateMeetupLambdaVersionro5JjAUFX1kuOaOSDSAyCmJqBg31RDXqly4HyhQCIG0"
      },
      "Export": {
        "Name": "sls-syncHub-dev-CreateMeetupLambdaFunctionQualifiedArn"
      }
    },
    "DeleteMeetupLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DeleteMeetupLambdaVersion2cUuovpJn5zEpC7AzdwIbb9044NHgDl1uzNnoNUls"
      },
      "Export": {
        "Name": "sls-syncHub-dev-DeleteMeetupLambdaFunctionQualifiedArn"
      }
    },
    "UpdateMeetupLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "UpdateMeetupLambdaVersionxtWNiXpN8830yOfRKLb4l64ZDkZ7eveiDGCXJNzdrBE"
      },
      "Export": {
        "Name": "sls-syncHub-dev-UpdateMeetupLambdaFunctionQualifiedArn"
      }
    },
    "GetAllMeetupsLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GetAllMeetupsLambdaVersionCJnuRfmIo3RmsgMk6vzYDO6nwAl9CDfSqCQRDDBw"
      },
      "Export": {
        "Name": "sls-syncHub-dev-GetAllMeetupsLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-syncHub-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-syncHub-dev-HttpApiUrl"
      }
    }
  }
}